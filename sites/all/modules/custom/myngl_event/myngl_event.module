<?php

function myngl_event_menu() {
  $items['myngl-event/%/lobby'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_lobby',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/social-area'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_social_area',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/ajax/message'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_social_area_ajax_message',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/ajax/theater-message'] = array(
    'title' => 'MyNGL Theater',
    'page callback' => 'myngl_event_theater_ajax_message',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );



  $items['myngl-event/%/ajax/question'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_social_area_ajax_question',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/ajax/pov_message'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_social_area_ajax_pov_message',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/ajax/post-pov-message'] = array(
    'title' => 'MyNGL Lobby',
    'page callback' => 'myngl_event_social_area_ajax_post_pov_message',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl-event/%/%/%'] = array(
  'title' => 'MyNGL Event Participant Status',
  'page callback' => 'myngl_event_participant_status',
  'page arguments' => array(1, 2, 3),
  'access callback' => TRUE,
  );

  $items['myngl-event/%/update-users-in-lounge'] = array(
    'title' => 'Update users in lounge',
    'page callback' => 'myngl_event_update_users_in_lounge',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  return $items;
}


function myngl_event_theme() {
  $items['myngl_event_lobby'] =  array(
                          'template' => 'myngl-event-lobby',
                          'variables' => array ('myngl' => NULL, 'brand' => NULL),
                        );

  $items['myngl_event_social_area'] =  array(
                          'template' => 'myngl-event-social-area',
                          'variables' => array ('myngl' => NULL, 'brand' => NULL, 'invitees' => NULL, 'ucg' => NULL, 'total_points' => NULL),
                        );

  return $items;
}

function myngl_event_lobby($nid) {
  drupal_add_js(path_to_theme().'/js/lobby.js');
  drupal_add_js("https://www.youtube.com/iframe_api");
  
  drupal_add_js(array('myngl_id' => $nid), 'setting');
  $myngl = node_load($nid);
  $brand = node_load($myngl->field_myngl_brand['und'][0]['nid']);

  return theme('myngl_event_lobby', array('myngl' => $myngl, 'brand' => $brand));
}


function myngl_event_social_area($nid) {
  global $user;

  drupal_add_library('system', 'ui.draggable');
  drupal_add_js(path_to_theme().'/js/social-area.js');
  drupal_add_js(path_to_theme().'/js/chat.js');
  drupal_add_js(path_to_theme().'/js/pov.js');
  drupal_add_js(array('myngl_id' => $nid), 'setting');
  drupal_add_js(array('user_id' => $user->uid), 'setting');

  $myngl = node_load($nid);

  $brand = node_load($myngl->field_myngl_brand['und'][0]['nid']);


  myngl_rewards_add($user->uid,
                    $nid,
                    'Enter social area',
                    $myngl->field_points_for_visiting_social['und'][0]['value'],
                    FALSE);


  $invitees = array();
  $ucg = array();

  foreach ($myngl->field_myngl_invitees['und'] as $x => $i) {
    $ic = array_shift(entity_load('field_collection_item', array($i['value'])));

    $u = user_load($ic->field_invitee_user_account['und'][0]['uid']);
    $p = profile2_load_by_user($u->uid, 'profile');


    $fb = false;
    $room = false;

    if (isset($p->field_picture['und'][0]['uri'])) {
      $pic = theme_image_style(array('style_name' => 'user_profile_circle_image', 'path' => $p->field_picture['und'][0]['uri'], 'attributes' => array('class' => 'myngl-event-profile-pic'), 'height' => null, 'width' => null));
    } else {
      $pic = "<img src='/sites/default/files/styles/user_profile_circle_image/public/default_images/default-user-profile.png' class='myngl-event-profile-pic' />";
    }

    $invitees[] = array (
                  'uid' => $u->uid,
                  'name' => $u->field_first_name['und'][0]['safe_value'] . ' ' . $u->field_last_name['und'][0]['safe_value'],
                  'pic' => $pic,
                  'fb' => $fb,
                  'room' => $room,
                  'tagline' =>  $ic->field_myngl_tagline['und'][0]['value'],
                  'about_me' => $p->field_about['und'][0]['value'],
                  'brand_rep' => $ic->field_brand_rep['und'][0]['value'],
                );

    for ($x=1;$x<=10;$x+=1) {
      if (isset($ic->field_image_upload['und'])) {
        foreach ($ic->field_image_upload['und'] as $image) {
          $ucg[] = array(
            'thumb' => theme_image_style(array('style_name' => 'user_generated_content_thumbs', 'path' => $image['uri'], 'attributes' => array('class' => 'ugc-pic'), 'height' => null, 'width' => null)),
            'content' => theme_image_style(array('style_name' => 'user_generated_content_images', 'path' => $image['uri'], 'attributes' => array('class' => 'ugc-pic'), 'height' => null, 'width' => null)),
            'user' => $u->field_first_name['und'][0]['safe_value'] . ' ' . $u->field_last_name['und'][0]['safe_value'],
          );
        }
      }

      if (isset($ic->field_video_upload['und'])) {
        foreach ($ic->field_video_upload['und'] as $video) {
          $ucg[] = array (
            'thumb' => theme('youtube_thumbnail', array('image_style' => 'user_generated_content_videos', 'video_id' => $video['video_id'])),
            'content' => theme('youtube_video', array('video_id' => $video['video_id'], 'size' => 'custom', 'height' => '400px', 'width' => '600px')),
            'user' => $u->field_first_name['und'][0]['safe_value'] . ' ' . $u->field_last_name['und'][0]['safe_value'],
          );
        }
      }
    }
  }

  return theme('myngl_event_social_area', array(
                                                'myngl' => $myngl,
                                                'brand' => $brand,
                                                'invitees' => $invitees,
                                                'ucg' => $ucg,
                                                'total_points' =>myngl_rewards_total_points($user->uid, $nid),
                                                )
               );
}

function myngl_event_social_area_ajax_message($nid) {
  $message['message'] = db_query('SELECT field_myngl_message_value FROM {field_data_field_myngl_message} WHERE entity_id = :eid', array(':eid' => $nid))->fetchField();
  drupal_json_output($message);
}

function myngl_event_theater_ajax_message($nid) {
  $message['message'] = db_query('SELECT field_theater_message_value FROM {field_data_field_theater_message} WHERE entity_id = :eid', array(':eid' => $nid))->fetchField();

  //$message['message']= $nid;
  drupal_json_output($message);
}

function myngl_event_social_area_ajax_post_pov_message($nid) {
  $node = node_load($nid);

  $node->field_pov_messages['und'][] = array('value' => $_POST['pov_message']);

  node_save($node);
}

function myngl_event_social_area_ajax_pov_message($nid) {
  $result = db_query('SELECT field_pov_messages_value FROM {field_data_field_pov_messages} WHERE entity_id = :eid ORDER BY delta DESC', array(':eid' => $nid));

  foreach ($result as $r) {
    $messages[] = $r->field_pov_messages_value;
  }

  drupal_json_output($messages);
}

function myngl_event_participant_status($myngl_id, $user_id, $status){
  $result = db_query('SELECT id FROM {myngl_participant_status} WHERE
                        myngl_id = :myngl_id AND
                        user_id = :user_id LIMIT 1',
                        array(
                          ':myngl_id' => $myngl_id,
                          ':user_id' => $user_id,
                        )
                      );

  if ($result->rowCount()) {
    db_update('myngl_participant_status')->fields(
        array(
          'status' => $status,
          'timestamp' => time(),
        )
      )->condition('myngl_id', $myngl_id, '=')
      ->condition('user_id', $user_id, '=')
      ->execute();

  }
  else{
    db_insert('myngl_participant_status')->fields(
      array(
        'myngl_id'      => $myngl_id,
        'user_id'       => $user_id,
        'status'  => $status,
        'timestamp' => time(),
      )
    )->execute();
    }
}


function myngl_event_update_users_in_lounge($myngl_id){
  /* Consider 3 mintes as beingoffline */

  $result = db_query("SELECT user_id FROM {myngl_participant_status} WHERE
                     myngl_id = :myngl_id AND
                     status = 'Lounge' AND
                     timestamp > :inactive_time",
                     array(
                           ':myngl_id' => $myngl_id,
                           ':inactive_time' =>  time() - 180,
                           ));

  $data = array();

  $result2 = db_query("SELECT user_id FROM {myngl_participant_status} WHERE
                     myngl_id = :myngl_id AND
                     timestamp > :offline_time",
                     array(
                           ':myngl_id' => $myngl_id,
                           ':offline_time' =>  time() - 180,
                           ));

  $data[] = $result2->rowCount();

  foreach ($result as $r) {
    $data[] = $r->user_id;
  }

  //The first element of the array is the total count. rest of the elements are the user_ids in lounge.
  return drupal_json_output($data);


}
