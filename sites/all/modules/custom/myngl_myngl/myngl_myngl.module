<?php

function myngl_myngl_menu() {
  $items['myngl/%/rsvp'] = array(
    'title' => 'Event RSVP',
    'page callback' => 'myngl_myngl_rsvp',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl/%/confirmed'] = array(
    'title' => 'RSVP CONFIRMED!',
    'page callback' => 'myngl_myngl_confirmed',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl/%/rsvp/complete'] = array(
    'title' => 'RSVP CONFIRMED!',
    'page callback' => 'myngl_myngl_complete',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl/%/change_date/%/%'] = array(
    'title' => 'RSVP CONFIRMED!',
    'page callback' => 'myngl_myngl_change_date',
    'page arguments' => array(1,3,4),
    'access callback' => TRUE,
  );

  $items['myngl/%/pre-questions'] = array(
    'title' => 'Pre Myngl Questions',
    'page callback' => 'myngl_myngl_pre_questions',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );

  $items['myngl/%/post-questions'] = array(
    'title' => 'Post Myngl Questions',
    'page callback' => 'myngl_myngl_post_questions',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  
  $items['myngl/%/send-invitation/%'] = array(
    'title' => 'Send Invitation',
    'page callback' => 'myngl_myngl_send_invitation',
    'page arguments' => array(1, 3),
    'access callback' => TRUE,
  );

  $items['node/%/message'] = array(
    'title' => 'Message',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('myngl_myngl_edit_message', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%/theater-message'] = array(
    'title' => 'Theater Message',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('myngl_myngl_edit_theater_message', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%/invitee-redeem'] = array(
    'title' => 'Rewards',
    'page callback' => 'myngl_rewards_invitee_redeem',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['node/%/question'] = array(
    'title' => ' POV Question',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('myngl_myngl_edit_question', 1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 99
  );
  
  $items['node/%/invitees'] = array(
    'title' => 'Invitees',
    'page callback' => 'myngl_myngl_invitees',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );


  return $items;
}


function myngl_myngl_theme() {
  $items['myngl_confirm'] =  array(
                          'template' => 'myngl-confirm',
                          'variables' => array ('node' => null),
                        );

  $items['myngl_confirm_invite'] =  array(
                          'template' => 'myngl-confirm-invite',
                          'variables' => array ('node' => null),
                        );

  $items['panel_myngl_upcoming'] =  array(
                          'template' => 'panel-myngl-upcoming',
                          'variables' => array ('myngl' => null, 'brand' => NULL),
                        );

  $items['overlay_myngl_upcoming'] =  array(
                          'template' => 'overlay-myngl-upcoming',
                          'variables' => array ('myngls' => null),
                        );

  $items['myngl_pre_questions_fix'] =  array(
                          'template' => 'myngl-pre-questions-fix',
                          'variables' => array ('user_id' => null, 'myngl' => null, 'brand' => null,  'form' => null),
                        );

  $items['myngl_post_questions_fix'] =  array(
                          'template' => 'myngl-post-questions-fix',
                          'variables' => array ('user_id' => null, 'myngl' => null, 'brand' => null,  'form' => null),
                        );

  $items['myngl_invitation_email'] =  array(
                          'template' => 'myngl-invitation-email',
                          'variables' => array ('myngl_id' => null, 'invitee' => null, 'banner' => null, 'gift_image' => null, 'title' => null,  'text' => null),
                        );

  return $items;
}

function myngl_myngl_change_date($myngl_id, $user_id, $date_id) {

  $node = node_load($myngl_id);

  foreach ($node->field_myngl_invitees['und'] as $i) {
    $ic = array_shift(entity_load('field_collection_item', array($i['value'])));

    if ($ic->field_invitee_user_account['und'][0]['uid'] == $user_id) {
      $ic->field_invitee_rsvp_date['und'][0]['value'] = $node->field_myngl_dates['und'][$date_id]['value'];
      $ic->save();
    }
  }

  print  date('m.d.Y @ g:i a',strtotime($node->field_myngl_dates['und'][$date_id]['value'])) . ' EST';
}

function myngl_myngl_rsvp($nid) {
  $cookie['rsvp'] = $nid;
  user_cookie_save($cookie);

  $node = node_load($nid);

  $output = theme('myngl_confirm', array('node' => $node));

  return $output;
}

function myngl_myngl_confirmed($nid) {
  $node = node_load($nid);

  $output = theme('myngl_confirm_invite', array('node' => $node));

  return $output;
}

function myngl_myngl_brand_logo($nid) {
  $node = node_load($nid);

  $brand = node_load($node->field_myngl_brand['und'][0]['nid']);

  $image = theme_image_style(array('style_name' => 'brand_logo', 'path' => $brand->field_brand_logo['und'][0]['uri'], 'height' => null, 'width' => null));

  return $image;
}

function myngl_myngl_complete($nid) {
    global $user;
    $email = $user->mail;
    $myngl_node = node_load($nid);

    foreach ($myngl_node->field_myngl_invitees['und'] as $i) {
      $u = array_shift(entity_load('field_collection_item', array($i['value'])));

      if ($u->field_invitee_email_address['und'][0]['safe_value'] == $email) {
        $u->field_invitee_status['und'][0]['value'] = 'RSVP';

        if (isset($_COOKIE['Drupal_visitor_rsvp_date'])) {
          $u->field_invitee_rsvp_date['und'][0]['value'] = $_COOKIE['Drupal_visitor_rsvp_date'];
        } else {
          $u->field_invitee_rsvp_date['und'][0]['value'] = $myngl_node->field_myngl_dates['und'][0]['value'];
        }

        $u->field_invitee_user_account['und'][0]['uid'] = $account->uid;
        $u->save(TRUE);

        user_cookie_delete('rsvp');

        drupal_goto("myngl/$nid/confirmed");
      }
    }

    return 'Invitation Not Found';
}

function myngl_myngl_upcoming($uid) {
  $invitee_id = db_query("SELECT entity_id FROM {field_data_field_invitee_user_account} WHERE field_invitee_user_account_uid = :uid LIMIT 1", array(':uid' => $uid))->fetchField();

  if ($invitee_id != '') {
    //TODO: make sure this is getting the next scheduled myngl
    $myngl_id = db_query("SELECT entity_id FROM {field_data_field_myngl_invitees} WHERE field_myngl_invitees_value = $invitee_id LIMIT 1")->fetchField();
  }

  if (isset($myngl_id)) {
    $node = node_load($myngl_id);

    $brand = node_load($node->field_myngl_brand['und'][0]['nid']);

    $output = theme('panel_myngl_upcoming', array('myngl' => $node, 'brand' => $brand));

    return $output;
  } else {
    return 'No Upcoming Myngls';
  }

}

function myngl_myngl_upcoming_overlay($uid) {
  //find myngls for this user
  $result = db_query("SELECT entity_id FROM {field_data_field_invitee_user_account} WHERE field_invitee_user_account_uid = :uid", array(':uid' => $uid));

  $myngls = array();
  foreach ($result as $r) {
    // based on invitee id get myngls
    $sub_result = db_query("SELECT entity_id FROM {field_data_field_myngl_invitees} WHERE field_myngl_invitees_value = :iid", array(':iid' => $r->entity_id));

    $invitee_collection = array_shift(entity_load('field_collection_item', array($r->entity_id)));

    foreach ($sub_result as $s) {
      $myngl = node_load($s->entity_id);

      $myngl_brand = array();
      $myngl_brand = array(
        'myngl' => $myngl,
        'date' => $invitee_collection->field_invitee_rsvp_date['und'][0]['value'],
        'brand' => node_load($myngl->field_myngl_brand['und'][0]['nid']),
      );

      $myngls[] = $myngl_brand;
    }
  }

  $output = theme('overlay_myngl_upcoming', array('myngls' => $myngls));

  return $output;
}

function myngl_myngl_overlay_change_date($form, &$form_state, $k, $myngl_id, $user_id) {
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  $invitee = _myngl_myngl_get_invitee_id($myngl_id, $user_id);

  $myngl = node_load($myngl_id);

  $dates = array();

  foreach ($myngl->field_myngl_dates['und'] as $d) :
    $dates[$d['value']] = myngl_long_date($d['value']);
  endforeach;

  $form['date'] = array(
    '#type' => 'radios',
    '#title' => t('Change Date'),
    '#default_value' => $invitee->field_invitee_rsvp_date['und'][0]['value'],
    '#options' => $dates,
    '#description' => t('Choose new date.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Confirm',
    '#title' => t('Submit'),
    '#ajax' => array(
        'callback' => 'myngl_myngl_overlay_change_date_ajax_submit',
        'wrapper' => 'upcoming-myngls-pane-info-' . $k,
        'method' => 'replace',
        'effect' => 'fade',
    ),
  );

  return $form;
}

function myngl_myngl_overlay_change_date_ajax_submit($form_id, &$form_state) {
  $v = $form_state['values'];
  $myngl = node_load($v['myngl_id']);
  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);
  $invitee->field_invitee_rsvp_date['und'][0]['value'] = $v['date'];
  $invitee->save();

  return  '<span class="date">Current '.myngl_long_date($v['date']).'</span><br><br>
           This Myngl will also run on the following dates.  Pick one that will work for you: <br><br>
           <strong>Date Updated</strong?>';
}

function myngl_myngl_image_upload($form, &$form_state, $k, $myngl_id, $user_id) {
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  $form['file'] = array(
    '#type' => 'file',
    '#title' => t('Image'),
    '#description' => t('Upload a file, allowed extensions: jpg, jpeg, png, & gif'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
    '#ajax' => array(
        'callback' => 'myngl_myngl_image_upload_ajax_submit',
        'wrapper' => 'myngl-myngl-image-upload-wrapper-' . $k,
        'method' => 'replace',
        'effect' => 'fade',
    ),
  );

  return $form;
}

function myngl_myngl_image_upload_ajax_submit($form_id, &$form_state) {
  $v = $form_state['values'];
  $myngl = node_load($v['myngl_id']);
  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);

  if ($_FILES['files']['tmp_name']['file']) {
    $file_data = file_get_contents($_FILES['files']['tmp_name']['file']);
    $file = file_save_data($file_data, 'public://' . $_FILES['files']['name']['file'], FILE_EXISTS_RENAME);
    $file->display = 1;

    $invitee->field_image_upload['und'][] = (array) $file;
    $invitee->save();
  }

  return 'File Uploaded';
}

function myngl_myngl_doc_upload($form, &$form_state, $k, $myngl_id, $user_id) {
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  $form['file'] = array(
    '#type' => 'file',
    '#title' => t('Image'),
    '#description' => t('Upload a file, allowed extensions: txt, doc, & pdf'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
    '#ajax' => array(
        'callback' => 'myngl_myngl_doc_upload_ajax_submit',
        'wrapper' => 'myngl-myngl-doc-upload-wrapper-' . $k,
        'method' => 'replace',
        'effect' => 'fade',
    ),
  );

  return $form;
}

function myngl_myngl_doc_upload_ajax_submit($form_id, &$form_state) {
  $v = $form_state['values'];
  $myngl = node_load($v['myngl_id']);
  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);

  if ($_FILES['files']['tmp_name']['file']) {
    $file_data = file_get_contents($_FILES['files']['tmp_name']['file']);
    $file = file_save_data($file_data, 'public://' . $_FILES['files']['name']['file'], FILE_EXISTS_RENAME);
    $file->display = 1;

    $invitee->field_document_upload['und'][] = (array) $file;
    $invitee->save();
  }

  return 'File Uploaded';
}

function myngl_myngl_youtube_embed($form, &$form_state, $k, $myngl_id, $user_id) {
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  $form['youtube'] = array(
    '#type' => 'textfield',
    '#title' => t('Youtube'),
    '#description' => t('Enter url of youtube video.  For example: https://www.youtube.com/watch?v=GkBDRUO8hAo'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
    '#ajax' => array(
        'callback' => 'myngl_myngl_youtube_embed_ajax_submit',
        'wrapper' => 'myngl-myngl-youtube-embed-wrapper-' . $k,
        'method' => 'replace',
        'effect' => 'fade',
    ),
  );

  return $form;
}

function myngl_myngl_youtube_embed_ajax_submit($form_id, &$form_state) {
  $v = $form_state['values'];
  $myngl = node_load($v['myngl_id']);
  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);

  $invitee->field_video_upload['und'][] = array(  'input' => $v['youtube'],
                                                  'video_id' => str_replace('https://www.youtube.com/watch?v=','',$v['youtube']));
  $invitee->save();

  return 'Video Embedded';
}

function myngl_myngl_pre_questions($nid) {
  global $user;

  $myngl = node_load($nid);
  $brand = node_load($myngl->field_myngl_brand['und'][0]['nid']);

  $output = theme('myngl_pre_questions_fix', array('user_id' => $user->uid, 'myngl' => $myngl, 'brand' => $brand, 'form' => render(drupal_get_form('myngl_myngl_pre_questions_form', $myngl->nid, $user->uid))));

  return $output;
}


function myngl_myngl_pre_questions_form($form, &$form_state, $myngl_id, $user_id) {
  $myngl = node_load($myngl_id);

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  foreach ($myngl->field_pre_myngl_questions['und'] as $k => $v) {
    $fc = array_shift(entity_load('field_collection_item', array($v['value'])));

    if (isset($fc->field_answer['und'][0])) {
      $answers = array();
      foreach ($fc->field_answer['und'] as $a) {
        $answers[$a['value']] = $a['value'];
      }

      $form['question-' . $k] = array(
        '#type' => 'radios',
        '#title' => t('Question ' . ($k+1) . ': '. $fc->field_question['und'][0]['safe_value']),
        '#options' => $answers,
      );
    } else {
      $form['question-' . $k] = array(
        '#type' => 'textfield',
        '#title' => t('Question ' . ($k+1) . ': '. $fc->field_question['und'][0]['safe_value']),
      );
    }
  }

  $form['tagline'] = array(
    '#type' => 'textfield',
    '#title' => t('Tagline for Event:'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'GO TO EVENT',
    '#title' => t('Submit'),
    '#prefix' => '<div class="form-actions">',
    '#suffix' => '</div>',
  );

  return $form;
}

function myngl_myngl_pre_questions_form_submit($form, &$form_state) {

  $v = $form_state['values'];

  $q_arr = array();
  foreach ($v as $k => $val) {
    if (preg_match('/question/',$k)) {
      $q_arr[$k] = $val;
    }
  }

  $answers_for_user = serialize($q_arr);

  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);

  $invitee->field_myngl_tagline['und'][0]['value'] = $v['tagline'];

  $invitee->field_pre_question_answers['und'][0]['value'] = $answers_for_user;

  $invitee->save();

  drupal_goto("myngl-event/".$v['myngl_id']."/lobby");
}

function myngl_myngl_post_questions($nid) {
  global $user;

  $myngl = node_load($nid);
  $brand = node_load($myngl->field_myngl_brand['und'][0]['nid']);

  $output = theme('myngl_post_questions_fix', array('user_id' => $user->uid, 'myngl' => $myngl, 'brand' => $brand, 'form' => render(drupal_get_form('myngl_myngl_post_questions_form', $myngl->nid, $user->uid))));

  return $output;
}


function myngl_myngl_post_questions_form($form, &$form_state, $myngl_id, $user_id) {
  $myngl = node_load($myngl_id);

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl_id
  );

  $form['user_id'] = array (
    '#type' => 'hidden',
    '#value' => $user_id
  );

  foreach ($myngl->field_post_myngl_questions['und'] as $k => $v) {
    $fc = array_shift(entity_load('field_collection_item', array($v['value'])));

    $answers = array();
    foreach ($fc->field_answer['und'] as $a) {
      $answers[$a['value']] = $a['value'];
    }

    $form['question-' . $k] = array(
      '#type' => 'radios',
      '#title' => t('Question ' . ($k+1) . ': '. $fc->field_question['und'][0]['safe_value']),
      '#options' => $answers,
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'GO TO REWARDS',
    '#title' => t('Submit'),
    '#prefix' => '<div class="form-actions">',
    '#suffix' => '</div>',
  );

  return $form;
}

function myngl_myngl_post_questions_form_submit($form, &$form_state) {

  $v = $form_state['values'];

  $q_arr = array();
  foreach ($v as $k => $val) {
    if (preg_match('/question/',$k)) {
      $q_arr[$k] = $val;
    }
  }

  $answers_for_user = serialize($q_arr);

  $invitee = _myngl_myngl_get_invitee_id($v['myngl_id'], $v['user_id']);

  $invitee->field_post_question_answer['und'][0]['value'] = $answers_for_user;

  $invitee->save();

  drupal_goto("myngl/".$v['myngl_id']."/rewards");
}



function _myngl_myngl_get_invitee_id($myngl_id, $user_id) {
  $myngl = node_load($myngl_id);

  foreach ($myngl->field_myngl_invitees['und'] as $v) {
    $fc = array_shift(entity_load('field_collection_item', array($v['value'])));

    if ($fc->field_invitee_user_account['und'][0]['uid'] == $user_id) {
      return $fc;
    }
  }
}

function myngl_myngl_edit_message($form, &$form_state, $nid) {
  $myngl = node_load($nid);

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl->nid,
  );

  $form['message'] = array(
    '#type' => 'textfield',
    '#title' => t('Update Message'),
    '#default_value' => $myngl->field_myngl_message['und'][0]['value'],
    '#description' => t('Leave message blank to hide from Myngl.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
  );

  return $form;
}



function myngl_myngl_edit_theater_message($form, &$form_state, $nid) {
  $myngl = node_load($nid);

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl->nid,
  );

  $form['theater_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Update Theater Message'),
    '#default_value' => $myngl->field_theater_message['und'][0]['value'],
    '#description' => t('Leave message blank to hide from Myngl.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
  );

  return $form;
}


function myngl_myngl_edit_message_submit($form, &$form_state) {
  $v = $form_state['values'];
  $myngl = node_load($v['myngl_id']);
  $myngl->field_myngl_message['und'][0]['value'] = $v['message'];
  node_save($myngl);
  drupal_set_message('Messge Updated.  It will appear in the Myngl in a few seconds.');
}


function myngl_myngl_edit_theater_message_submit($form, &$form_state) {
  $v = $form_state['values'];

  $myngl = node_load($v['myngl_id']);
  $myngl->field_theater_message['und'][0]['value'] = $v['theater_message'];
  node_save($myngl);

  drupal_set_message('Messge Updated.  It will appear in the Myngl in a few seconds.');
}

function myngl_myngl_edit_question($form, &$form_state, $nid) {
  $myngl = node_load($nid);

  $form['myngl_id'] = array (
    '#type' => 'hidden',
    '#value' => $myngl->nid,
  );

  $form['question'] = array(
    '#type' => 'textfield',
    '#title' => t('Update Question'),
    '#default_value' => $myngl->field_pov_question['und'][0]['value'],
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#title' => t('Submit'),
  );

  return $form;
}

function myngl_myngl_edit_question_submit($form, &$form_state) {
  $v = $form_state['values'];

  $myngl = node_load($v['myngl_id']);
  $myngl->field_pov_question['und'][0]['value'] = $v['question'];
  node_save($myngl);

  drupal_set_message('Question Updated.  It will appear in the Myngl in a few seconds.');
}


function myngl_myngl_invitees($nid) {
  $node = node_load($nid);  

  $rows = array();

  foreach ($node->field_myngl_invitees['und'] as $k => $i) {
    $ic = array_shift(entity_load('field_collection_item', array($i['value'])));

    $row = array();
  
    $user_acct = '';

    if (isset($ic->field_invitee_user_account['und'][0]['uid'])) {
      $user = user_load($ic->field_invitee_user_account['und'][0]['uid']);
      $user_acct = l($user->name, 'user/'.$user->uid);
    }

    $actions = '';

    if ($ic->field_invitee_status['und'][0]['value'] == 'New') {
      $actions = l('Send Invitation', 'myngl/'.$nid.'/send-invitation/'.$k);
    }

    $row = array(
      $user_acct,
      $ic->field_invitee_first_name['und'][0]['value'],
      $ic->field_invitee_last_name['und'][0]['value'],
      $ic->field_invitee_email_address['und'][0]['value'],
      $ic->field_invitee_status['und'][0]['value'],
      $actions
    );

    $rows[] = $row;
  }

  $header = array(
    'User',
    'First Name',
    'Last Name',
    'Email',
    'Status',
    'Actions',
  );

  $table = theme_table(array('header' => $header, 'rows' => $rows, 'attributes' => array()));

  $form = render(drupal_get_form('myngl_myngl_add_invitee', $nid));

  return '<br />'.$table.'<br /><h2>Add Invitee:</h2>'.$form;
}

function myngl_myngl_add_invitee($form, &$form_state, $nid) {

  $form['myngl_nid'] = array(
    '#type' => 'hidden',
    '#value' => $nid,
  );

  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First Name'),
    '#description' => t('Enter invitees first name.'),
  );

  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name'),
    '#description' => t('Enter invitees last name.'),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#description' => t('Enter invitees email address.'),
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  
  return $form;
}

function myngl_myngl_add_invitee_submit($form_id, &$form_state) {
  $v = $form_state['values'];

  $node = node_load($v['myngl_nid']);

  $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_myngl_invitees'));
  $field_collection_item->setHostEntity('node', $node);

  $field_collection_item->field_invitee_first_name['und'][]['value'] = $v['first_name'];
  $field_collection_item->field_invitee_last_name['und'][]['value'] = $v['last_name'];
  $field_collection_item->field_invitee_email_address['und'][]['value'] = $v['email'];
  $field_collection_item->field_invitee_status['und'][]['value'] = 'New';

  $field_collection_item->save();


  drupal_set_message('Invitee Added.  Use the link in the invitee list to notify this user.');
}

function myngl_myngl_admin_paths() {
  return array(
    'node/*/message' => TRUE,
    'node/*/question' => TRUE,
    'node/*/theater-message' =>TRUE,
    'node/*/invitee-redeem' => TRUE,
    'node/*/invitees' => TRUE,
  );
}


function myngl_myngl_send_invitation($myngl_id, $invitee_id) {
    $node = node_load($myngl_id);
    
    $subject = 'Your\'re invited to the '.$node->title;

    $brand = node_load($node->field_myngl_brand['und'][0]['nid']);

    $banner = file_create_url($brand->field_brand_logo['und'][0]['uri']);

    $gift_image = file_create_url($node->field_reward_congrats_image['und'][0]['uri']);
   
    $ic = array_shift(entity_load('field_collection_item', array($node->field_myngl_invitees['und'][$invitee_id]['value'])));
 
    $ic->field_invitee_status['und'][0]['value'] = 'Invitation Delivered';
    $ic->save(TRUE);

    $to = $ic->field_invitee_email['und'][0]['value'];

    $firstname = $ic->field_invitee_first_name['und'][0]['value'];

    $html = theme('myngl_invitation_email', array('myngl_id' => $myngl_id, 'invitee' => $firstname, 'banner' => $banner, 'gift_image' => $gift_image, 'title' => $node->title, 'text' => $node->field_myngl_invitation_email['und'][0]['value'])); 
 
    myngl_myngl_sendMail($to, $subject, $html, $alt);
 
    drupal_set_message('Invitation Sent.');

    drupal_goto();
}

function myngl_myngl_sendMail($to, $subject, $html, $alt) {
  require_once($_SERVER['DOCUMENT_ROOT']."/sites/all/modules/custom/myngl_myngl/PHPMailer/class.phpmailer.php");

  $mail = new PHPMailer();

  $mail->IsSMTP();                                      // set mailer to use SMTP
  $mail->Host = "ssl://secure.emailsrvr.com";  // specify main and backup server
  $mail->Port = 465;
  $mail->SMTPAuth = true;     // turn on SMTP authentication
  $mail->Username = 'nathan@nathanrharris.com';  // SMTP username
  $mail->Password = "Russe11H"; // SMTP password

  $mail->From = "nathan@nathanrharris.com";
  $mail->FromName = "Nathan Harris";
  $mail->AddReplyTo("nathan@nathanrharris.com", "Nathan Harris");

  $mail->AddBCC('nathan@nathanrharris.com');
  $mail->AddAddress($to);

  $mail->IsHTML(true);                                  // set email format to HTML

  $mail->Subject = $subject;
  $mail->Body    = $html;
  $mail->AltBody = $alt;

  if(!$mail->Send())
  {
     exit;
  }

  return 1;
}
